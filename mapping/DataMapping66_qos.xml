<?xml version="1.0" encoding="UTF-8"?>
<mappings xmlns="http://www.garfield.com/MappingSchema"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.garfield.com/MappingSchema MappingSchema.xsd ">
	<!-- configure qos interface -->

	<!-- PON level QoS -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>2</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosPon</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId</index>
				<parser>regx|pon:1/1/|(32,8,-2)(raw:/)(16,16,1)</parser>
			</attribute>
			<attribute>
				<cliname>cac-profile</cliname>
				<dbTable>QosPon</dbTable>
				<dbAttribute>cacProf</dbAttribute>
				<index>logId</index>
				<parser>ref|name:|(QosCac:Index:Name)</parser>
				<default>name:FD_GponVideo</default>
			</attribute>
			<attribute>
				<cliname>ds-num-queue</cliname>
				<dbTable>QosPon</dbTable>
				<dbAttribute>dsNumQ</dbAttribute>
				<index>logId</index>
				<default>4</default>
			</attribute>
			<attribute>
				<cliname>autoschedule</cliname>
				<dbTable>QosPon</dbTable>
				<dbAttribute>autoSch</dbAttribute>
				<index>logId</index>
				<parser>bool:0</parser>
				<novalue>true</novalue>
			</attribute>
			<attribute>
				<cliname>dsfld-shaper-prof</cliname>
				<dbTable>QosPon</dbTable>
				<dbAttribute>dsFShap</dbAttribute>
				<index>logId</index>
				<parser>ref|name:|(QosShap:Index:Name)</parser>
			</attribute>
		</attributes>
	</mapping>

	<!-- ONT level QoS -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>2</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId</index>
				<parser>regx|ont:1/1/|(32,8,-2)(raw:/)(23,9,1)(raw:/)(16,7,1)</parser>
			</attribute>
			<attribute>
				<cliname>scheduler-node</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>scnProf</dbAttribute>
				<index>logId</index>
				<parser>ref|name:|(QosScNode:Index:Name)</parser>
			</attribute>
			<attribute>
				<cliname>ds-queue-sharing</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>dsQShar</dbAttribute>
				<index>logId</index>
				<parser>bool:0</parser>
				<novalue>true</novalue>
			</attribute>
			<attribute>
				<cliname>us-queue-sharing</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>usQShar</dbAttribute>
				<index>logId</index>
				<parser>bool:0</parser>
				<novalue>true</novalue>
			</attribute>
			<attribute>
				<cliname>ds-num-rem-queue</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>dsNumRQ</dbAttribute>
				<index>logId</index>
				<parser>auto:(0x0,not-applicable)</parser>
				<default>not-applicable</default>
			</attribute>
			<attribute>
				<cliname>us-num-queue</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>usNumQ</dbAttribute>
				<index>logId</index>
				<default>8</default>
			</attribute>
			<attribute>
				<cliname>us-vlanport-queue</cliname>
				<dbTable>QosOnt</dbTable>
				<dbAttribute>vpQEn</dbAttribute>
				<index>logId</index>
				<parser>bool:0</parser>
				<novalue>true</novalue>
			</attribute>
		</attributes>
	</mapping>

	<!-- UNI level QoS -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>2</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosUni</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId</index>
				<parser>select(itfTableV2|(logId,2,4:slot,2,4)(logId,6,4:logical,2,4)|ifType)?((*?xref|1/1/|lanConfig|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0))(*?xref|1/1/|voipUni|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni))(*?route(portVlanTbl?(logId,2,4:slot,2,4)(logId,6,4:logic,2,4))((end:uvid(class:com.mars.dbexport.service.parse.VlanIdParser))portTbl?(slot,2,4:bsSlot,2,4)(logPort,2,4:bsLog,2,4))(multi(xref|vlan:1/1/|lanConfig|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0)(raw::);xref|vlan:1/1/|voipUni|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni:)))))</parser>
			</attribute>
			<attribute>
				<cliname>scheduler-node</cliname>
				<dbTable>QosUni</dbTable>
				<dbAttribute>scnProf</dbAttribute>
				<index>logId</index>
				<parser>ref|name:|(QosScNode:Index:Name)</parser>
				<default>name:NGLT_Default</default>
			</attribute>
			<attribute>
				<cliname>cac-profile</cliname>
				<dbTable>QosUni</dbTable>
				<dbAttribute>cacProf</dbAttribute>
				<index>logId</index>
				<parser>ref|name:|(QosCac:Index:Name)</parser>
				<default>name:FD_ONTUniVideo</default>
			</attribute>
			<attribute>
				<cliname>gem-sharing</cliname>
				<dbTable>QosUni</dbTable>
				<dbAttribute>gemShr</dbAttribute>
				<index>logId</index>
				<parser>enum:(0x1,enable)(0x2,disable)(0x3,not-applicable)</parser>
				<default>disable</default>
			</attribute>
		</attributes>
	</mapping>

	<!-- upstream queue -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>3</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosUsq</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId;usQNum</index>
				<parser>select(itfTableV2|(logId,2,4:slot,2,4)(logId,6,4:logical,2,4)|ifType)?((*?xref|1/1/|lanConfig|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0))(*?xref|1/1/|voipUni|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni))(*?route(portVlanTbl?(logId,2,4:slot,2,4)(logId,6,4:logic,2,4))((end:uvid(class:com.mars.dbexport.service.parse.VlanIdParser))portTbl?(slot,2,4:bsSlot,2,4)(logPort,2,4:bsLog,2,4))(multi(xref|vlan:1/1/|lanConfig|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0)(raw::);xref|vlan:1/1/|voipUni|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni:)))))</parser>
			</attribute>
			<attribute>
				<cliname>upstream-queue</cliname>
				<dbTable>QosUsq</dbTable>
				<dbAttribute>usQNum</dbAttribute>
				<index>logId;usQNum</index>
			</attribute>
			<attribute>
				<cliname>priority</cliname>
				<dbTable>QosUsq</dbTable>
				<dbAttribute>usQpri</dbAttribute>
				<index>logId;usQNum</index>
				<default>1</default>
			</attribute>
			<attribute>
				<cliname>weight</cliname>
				<dbTable>QosUsq</dbTable>
				<dbAttribute>usQWei</dbAttribute>
				<index>logId;usQNum</index>
				<default>1</default>
			</attribute>
			<attribute>
				<cliname>bandwidth-profile</cliname>
				<dbTable>QosUsq</dbTable>
				<dbAttribute>usbwSha</dbAttribute>
				<index>logId;usQNum</index>
				<parser>ref|name:|(QosBwProf:Index:Name)</parser>
			</attribute>
		</attributes>
	</mapping>

	<!-- downstream queue -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>3</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId;dsQNum</index>
				<parser>select(itfTableV2|(logId,2,4:slot,2,4)(logId,6,4:logical,2,4)|ifType)?((*?xref|1/1/|lanConfig|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0))(*?xref|1/1/|voipUni|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni))(*?route(portVlanTbl?(logId,2,4:slot,2,4)(logId,6,4:logic,2,4))((end:uvid(class:com.mars.dbexport.service.parse.VlanIdParser))portTbl?(slot,2,4:bsSlot,2,4)(logPort,2,4:bsLog,2,4))(multi(xref|vlan:1/1/|lanConfig|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0)(raw::);xref|vlan:1/1/|voipUni|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni:)))))</parser>
			</attribute>
			<attribute>
				<cliname>queue</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>dsQNum</dbAttribute>
				<index>logId;dsQNum</index>
			</attribute>
			<attribute>
				<cliname>priority</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>dsQPri</dbAttribute>
				<index>logId;dsQNum</index>
				<default>parser:(dsQNum:0x0:6,4)(dsQNum:0x1:6,4)(dsQNum:0x2:7,4)(dsQNum:0x3:8,4)(dsQNum:0x4:5)(dsQNum:0x5:6)(dsQNum:0x6:7)(dsQNum:0x7:8)</default>
			</attribute>
			<attribute>
				<cliname>weight</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>dsQWei</dbAttribute>
				<index>logId;dsQNum</index>
				<default>parser:(dsQNum:0x0:34,10)(dsQNum:0x1:66,20)(dsQNum:0x2:0,30)(dsQNum:0x3:0,40)(dsQNum:0x4:0)(dsQNum:0x5:0)(dsQNum:0x6:0)(dsQNum:0x7:0)</default>
			</attribute>
			<attribute>
				<cliname>queue-profile</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>dsQBaP</dbAttribute>
				<index>logId;dsQNum</index>
				<parser>ref|name:|(QosQueues:Index:Name)</parser>
				<default>name:NGLT_Default</default>
			</attribute>
			<attribute>
				<cliname>shaper-profile</cliname>
				<dbTable>QosDsq</dbTable>
				<dbAttribute>dsQShP</dbAttribute>
				<index>logId;dsQNum</index>
				<parser>ref|name:|(QosShap:Index:Name)</parser>
			</attribute>
		</attributes>
	</mapping>

	<!-- downstream remote queue -->
	<mapping>
		<attributes>
			<prefix>configure qos</prefix>
			<miniAttributes>3</miniAttributes>
			<attribute>
				<cliname>interface</cliname>
				<dbTable>QosDsRemq</dbTable>
				<dbAttribute>logId</dbAttribute>
				<index>logId;dsRQNum</index>
				<parser>select(itfTableV2|(logId,2,4:slot,2,4)(logId,6,4:logical,2,4)|ifType)?((*?xref|1/1/|lanConfig|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0))(*?xref|1/1/|voipUni|(logId,2,4:index,2,4)(logId,6,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni))(*?route(portVlanTbl?(logId,2,4:slot,2,4)(logId,6,4:logic,2,4))((end:uvid(class:com.mars.dbexport.service.parse.VlanIdParser))portTbl?(slot,2,4:bsSlot,2,4)(logPort,2,4:bsLog,2,4))(multi(xref|vlan:1/1/|lanConfig|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(slot,0,0,0)(raw:/)(port,0,0,0)(raw::);xref|vlan:1/1/|voipUni|(bsSlot,2,4:index,2,4)(bsLog,2,4:itfmLog,2,4)|(index,16,8,-2)(raw:/)(index,7,9,1)(raw:/)(index,0,7,1)(raw:/)(raw:vuni:)))))</parser>
			</attribute>
			<attribute>
				<cliname>ds-rem-queue</cliname>
				<dbTable>QosDsRemq</dbTable>
				<dbAttribute>dsRQNum</dbAttribute>
				<index>logId;dsRQNum</index>
			</attribute>
			<attribute>
				<cliname>priority</cliname>
				<dbTable>QosDsRemq</dbTable>
				<dbAttribute>dsRQpri</dbAttribute>
				<index>logId;dsRQNum</index>
				<default>1</default>
			</attribute>
			<attribute>
				<cliname>weight</cliname>
				<dbTable>QosDsRemq</dbTable>
				<dbAttribute>dsRQWei</dbAttribute>
				<index>logId;dsRQNum</index>
				<default>1</default>
			</attribute>
		</attributes>
	</mapping>
</mappings>
